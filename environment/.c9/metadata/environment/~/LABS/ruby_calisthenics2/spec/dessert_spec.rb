{"changed":true,"filter":false,"title":"dessert_spec.rb","tooltip":"~/LABS/ruby_calisthenics2/spec/dessert_spec.rb","value":"require 'dessert.rb'\nrequire 'byebug'\n\nRSpec.configure do |config|\n  config.filter_run_excluding :disabled => true\nend\n\ndescribe Dessert do\n  describe 'dessert getters and setters' do\n    before(:each)  { @dessert = Dessert.new('cake', 400) }\n    it 'should set name [10 points]' , points: 10 do\n      expect(@dessert.name).to eq('cake')\n    end\n    it 'should set calories [10 points]' , points: 10 do\n      expect(@dessert.calories).to eq(400)\n    end\n    it 'should be able to change name [10 points]' , points: 10 do\n      @dessert.name = 'ice cream'\n      expect(@dessert.name).to eq('ice cream')\n    end\n    it 'should be able to change calories [10 points]' , points: 10 do\n      @dessert.calories = 80\n      expect(@dessert.calories).to eq(80)\n    end\n  end\n  \n  describe 'delicious and healthy' do\n    describe '-cake' do\n      before :each do\n        @dessert = Dessert.new('cake', 400)\n      end\n      it 'should be delicious [10 points]' do\n        expect(@dessert).to be_delicious\n      end\n      it 'should not be healthy [10 points]' do\n        expect(@dessert).not_to be_healthy\n      end\n    end\n    \n    describe '-apple' do\n      before :each do\n        @subject = Dessert.new('apple', 75)\n      end\n      it 'should be delicious [10 points]' do\n        expect(@subject).to be_delicious\n      end\n      it 'should be healthy [10 points]' do\n        expect(@subject).to be_healthy\n      end\n    end\n  end\nend\n\ndescribe JellyBean do\n  describe 'JellyBean getters and setters' do\n    before(:each)  { @jellybean = JellyBean.new('vanilla') }\n    \n    it 'should contain 5 calories [2.5 points]' do\n      expect(@jellybean.calories).to be == 5\n    end\n    it 'should be named vanilla jelly bean [2.5 points]' do\n      expect(@jellybean.name).to match(/vanilla jelly bean/i)\n    end\n    it 'should set flavor [2.5 points]' do\n      expect(@jellybean.flavor).to eq('vanilla')\n    end\n    it 'should be able to change flavor [2.5 points]' do\n      @jellybean.flavor = 'cherry'\n      expect(@jellybean.flavor).to eq('cherry')\n    end\n  end\n  \n  describe 'modify delicious', :disabled => true do\n    describe '-when non-licorice' do\n      before :each do\n        @jellybean = JellyBean.new('vanilla')\n      end\n    \n      it 'should be delicious [5 points]' do\n        expect(@jellybean).to be_delicious\n      end\n    end\n  \n    describe '-when licorice' do\n      before :each do\n        @jellybean = JellyBean.new('licorice')\n      end\n      it 'should not be delicious [5 points]' do\n        expect(@jellybean).not_to be_delicious\n      end\n    end\n  end\nend\n","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1551041145327}